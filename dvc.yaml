stages:
  preprocess:
    foreach:
    - train
    - validation
    - test
    do:
      cmd: pipenv run python sherlock/scripts/preprocess.py ${item}
      deps:
      - data/data/raw/${item}_values.parquet
      - data/data/raw/${item}_values.parquet
      - data/data/raw/${item}_values.parquet
      - features/par_vec_trained_400.pkl
      - features/par_vec_trained_400.pkl.docvecs.vectors_docs.npy
      - features/par_vec_trained_400.pkl.trainables.syn1neg.npy
      - features/par_vec_trained_400.pkl.wv.vectors.npy
      - sherlock
      - Pipfile.lock
      outs:
      - data/data/processed/${item}.csv
  convert:
    cmd: pipenv run python sherlock/scripts/convert.py
    deps:
    - data/data/processed/train.csv
    - data/data/processed/validation.csv
    - data/data/processed/test.csv
    - sherlock
    - Pipfile.lock
    outs:
    - data/data/processed/train.parquet
    - data/data/processed/validation.parquet
    - data/data/processed/test.parquet
  regex_feature_selection:
    cmd: pipenv run python sherlock/scripts/regex_feature_selection.py
    deps:
    - data/data/processed/train.parquet
    - data/data/raw/train_labels.parquet
    - sherlock/scripts/regex_feature_selection.py
    - Pipfile.lock
    outs:
    - features/feature_column_identifiers/regex_col.tsv
  train:
    cmd: pipenv run python sherlock/scripts/train.py
    params:
      - params.yaml:
    deps:
    - data/data/processed/train.parquet
    - data/data/raw/train_labels.parquet
    - data/data/processed/validation.parquet
    - data/data/raw/validation_labels.parquet
    - data/data/processed/test.parquet
    - data/data/raw/test_labels.parquet
    - features/feature_column_identifiers
    - sherlock
    - Pipfile.lock
    outs:
    - model_files/classes_retrained_sherlock.npy
    - model_files/retrained_sherlock_model.json
    - model_files/retrained_sherlock_weights.h5
    metrics:
    - dvclive/metrics.json:
        cache: false
    plots:
    - dvclive/plots:
        cache: false
  generate_confusion_matrix:
    cmd: pipenv run python sherlock/scripts/generate_confusion_matrix.py
    deps:
    - model_files/classes_retrained_sherlock.npy
    - model_files/retrained_sherlock_model.json
    - model_files/retrained_sherlock_weights.h5
    outs:
    - model_files/retrained_sherlock_confusion.txt
